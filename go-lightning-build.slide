GoLangPhilly - Building go code
A lightning talk on building go code with docker
1 Jan 2019
Tags: golang, docker

Darrel Herbst
Warner Brothers Digital Labs
dherbst@gmail.com
https://github.com/dherbst
@darrelherbst

* GoLangPhilly - Lightning talk on building code code with docker
This lightning talk explains how I build go code with docker.  It's not necessarily the right way to do it, but this has been working for us.

https://github.com/dherbst/go-lightning-build

1. directory layout
2. vendoring
3. make
4. docker-machine
5. testing
6. coverage

* 1. Directory layout

/makefile
/PackageName/*.go  (only need PackageName if it does not match the repo name)
/vendor/github.com/*  (We don't check these into git)
/doc/*.md
/bin/executables*

* 2. Vendoring & 3. makefile

DO NOT CHANGE THE GOPATH.  Use $GOPATH/src/vendor for your dependencies

`.gitignore`

    /vendor/*

Have your makefile clone your dependencies to vendor.   We do this so that we can create a clone of the repos under our org name so they never get deleted.   You can use gomod if you prefer.

    get:
         mkdir -p vendor
         git clone git@github.com:DramaFever/go.uuid.git --branch master \
         vendor/github.com/satori/go.uuid && \
         cd vendor/github.com/satori/go.uuid && \
         git checkout 242673bbc820e051ef00033e274d32e08ece9e15

* 4. docker

Install docker

   docker pull golang:1.11

If you want other versions of go, take a look at https://hub.docker.com/_/golang/

* Back to 3. makefile

Use a build task in make to compile things

    make clean get build
    make test
    open coverage.html

build task has two parts

1. Run the golang:1.11 docker container (build)
2. build in the running container (build-in-container)

* Run the docker container, use the existing GOPATH, never change it

    build:
         docker run --rm -i -v $(PWD):/go/src/github.com/dherbst/reponame -w /go/src/github.com/dherbst/reponame golang:1.11 make build-in-container

    build-in-container:
         go vet github.com/dherbst/go-lightning-build/lightning
         go build github.com/dherbst/go-lightning-build/lightning
         go test -coverprofile=coverage.out github.com/dherbst/go-lightning-build/lightning
         go tool cover -html=coverage.out -o coverage.html

* Run it

   $ make
   docker run --rm -i -v /Users/dh/src/dherbst/go-lightning-build:/go/src/github.com/dherbst/go-lightning-build -w /go/src/github.com/dherbst/go-lightning-build golang:1.11 make build-in-container
   go vet github.com/dherbst/go-lightning-build/lightning
   go build -a github.com/dherbst/go-lightning-build/lightning
   go build -a -o bin/lightning github.com/dherbst/go-lightning-build/cmd/main.go
   go test -coverprofile=coverage.out github.com/dherbst/go-lightning-build/lightning
   ok   	lightning	0.005s	coverage: 50.0% of statements
   go tool cover -html=coverage.out -o coverage.html

   $ open coverage.html

* Now you have your executable, make a docker image with it
If you are running on OSX, your executable is sitting on your local filesystem, but it a linux executable, not an osx one:

Linux:

    $ file lightning
    lightning: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked (uses
    shared libs), not stripped

If you try to run it on OSX:

    $ ./lightning
    -bash: ./lightning: cannot execute binary file

OSX:

    $ file `which ls`
    /bin/ls: Mach-O 64-bit executable x86_64

* Dockerfile

    FROM buildpack-deps:jessie-scm
    ADD bin/lightning /usr/local/bin/lightning
    ENTRYPOINT ["lightning"]

Build the image

    docker build -t lightning:latest .

Run the image

    docker run -it lightning:latest
    Here is the uuid 23a8ccca-50a3-4d3c-9af2-428053b1290d
